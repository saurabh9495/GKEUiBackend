apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config-backend
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: egress_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10000
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: egress
                    codec_type: AUTO
                    route_config:
                      virtual_hosts:
                        - name: egress_service
                          domains: ["*"]
                          routes:
                            - match: { prefix: "/" }
                              route: 
                                cluster: dynamic_forward_proxy_cluster
                                auto_host_rewrite: true
                    http_filters:
                      - name: envoy.filters.http.lua
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                          inline_code: |
                            function envoy_on_request(request_handle)
                              -- Log request method and path
                              local headers = request_handle:headers()
                              local method = headers:get(":method")
                              local path = headers:get(":path")
                              request_handle:logInfo("Request - Method: " .. tostring(method) .. ", Path: " .. tostring(path))
                              
                              -- Log request headers
                              for key, value in pairs(headers) do
                                request_handle:logInfo("Request Header: " .. key .. " = " .. value)
                              end
                              
                              -- Log request body
                              local body = request_handle:body()
                              if body then
                                request_handle:logInfo("Request Body: " .. body:getBytes(0, body:length()))
                              end
                            end
                            
                            function envoy_on_response(response_handle)
                              -- Log response headers
                              local headers = response_handle:headers()
                              for key, value in pairs(headers) do
                                response_handle:logInfo("Response Header: " .. key .. " = " .. value)
                              end
                              
                              -- Log response body
                              local body = response_handle:body()
                              if body then
                                response_handle:logInfo("Response Body: " .. body:getBytes(0, body:length()))
                              end
                            end
                      - name: envoy.filters.http.dynamic_forward_proxy
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig
                          dns_cache_config:
                            name: dynamic_forward_proxy_cache_config
                            dns_lookup_family: V4_ONLY
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: dynamic_forward_proxy_cluster
          lb_policy: CLUSTER_PROVIDED
          cluster_type:
            name: envoy.clusters.dynamic_forward_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig
              dns_cache_config:
                name: dynamic_forward_proxy_cache_config
                dns_lookup_family: V4_ONLY
    admin:
      access_log_path: "/tmp/admin_access.log"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901
