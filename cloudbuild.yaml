steps:
  # Build Docker images
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/celi12/ui-image:latest", "./ui"]
  
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/celi12/backend-image:latest", "./backend"]

  # Push images to Google Container Registry (GCR)
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/celi12/ui-image:latest"]
  
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/celi12/backend-image:latest"]

  # Authenticate and configure Kubernetes cluster
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      - "container"
      - "clusters"
      - "get-credentials"
      - "cluster-1"
      - "--zone"
      - "us-central1-a"
      - "--project"
      - "celi12"

  # Apply Kubernetes manifests
  - name: "gcr.io/cloud-builders/kubectl"
    entrypoint: "kubectl"
    args: ["apply", "-f", "./envoy/envoy-config.yaml"]

  - name: "gcr.io/cloud-builders/kubectl"
    entrypoint: "kubectl"
    args: ["apply", "-f", "./backend/backend-deployment.yaml"]

  - name: "gcr.io/cloud-builders/kubectl"
    entrypoint: "kubectl"
    args: ["apply", "-f", "./ui/ui-deployment.yaml"]

  - name: "gcr.io/cloud-builders/kubectl"
    entrypoint: "kubectl"
    args: ["apply", "-f", "./backend/backend-service.yaml"]

  - name: "gcr.io/cloud-builders/kubectl"
    entrypoint: "kubectl"
    args: ["apply", "-f", "./ui/ui-service.yaml"]

  - name: "gcr.io/cloud-builders/kubectl"
    entrypoint: "kubectl"
    args: ["apply", "-f", "./envoy/envoy-deployment.yaml"]

  - name: "gcr.io/cloud-builders/kubectl"
    entrypoint: "kubectl"
    args: ["apply", "-f", "./envoy/envoy-service.yaml"]

options:
  logging: CLOUD_LOGGING_ONLY
  env:
    - "CLOUDSDK_COMPUTE_ZONE=us-central1-a"
    - "CLOUDSDK_CONTAINER_CLUSTER=cluster-1"
