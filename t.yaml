apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config-backend
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: egress_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10000
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: egress
                    codec_type: AUTO
                    route_config:
                      virtual_hosts:
                        - name: internal_host
                          # Match traffic intended for your backend application
                          domains: ["localhost", "backend-app-service"]
                          routes:
                            - match: { prefix: "/" }
                              route: { cluster: backend_service }
                        - name: external_api_host
                          # Match outbound traffic to jsonplaceholder.typicode.com
                          domains: ["jsonplaceholder.typicode.com"]
                          routes:
                            - match: { prefix: "/" }
                              route: { cluster: external_api }
                    http_filters:
                      # Lua filter to log outbound request details
                      - name: envoy.filters.http.lua
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                          inline_code: |
                            function envoy_on_request(request_handle)
                              local headers = request_handle:headers()
                              local method = headers:get(":method") or "UNKNOWN"
                              local host = headers:get("host") or "UNKNOWN"
                              local path = headers:get(":path") or "UNKNOWN"
                              request_handle:logInfo("Outbound Request - Method: " .. method .. ", Host: " .. host .. ", Path: " .. path)
                            end
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: backend_service
          connect_timeout: 5s
          type: LOGICAL_DNS
          load_assignment:
            cluster_name: backend_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          # Since backend and Envoy run in the same pod, use localhost
                          address: localhost
                          port_value: 5000
        - name: external_api
          connect_timeout: 5s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config: |
              {
                \"@type\": \"type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext\",
                \"common_tls_context\": {}
              }
          load_assignment:
            cluster_name: external_api
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: jsonplaceholder.typicode.com
                          port_value: 443
