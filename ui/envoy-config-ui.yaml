apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config-ui
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: ui_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10000
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ui
                    codec_type: AUTO
                    route_config:
                      virtual_hosts:
                        - name: ui
                          domains: ["*"]
                          routes:
                            - match: { prefix: "/" }
                              route:
                                cluster: ui_service
                    http_filters:
                      - name: envoy.filters.http.lua
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                          inline_code: |
                            function envoy_on_request(request_handle)
                              local headers = request_handle:headers()
                              headers:replace("Authorization", "[REDACTED]")
                              headers:replace("password", "[REDACTED]")

                            function envoy_on_response(response_handle)
                              local headers = response_handle:headers()
                              local status = headers:get(":status")
                              local request_info = {
                                method = request_handle:headers():get(":method"),
                                path = request_handle:headers():get(":path"),
                                status = status
                              }
                              local json = require("cjson")
                              request_handle:log(json.encode(request_info))
                      - name: envoy.filters.http.router
    clusters:
      - name: ui_service
        connect_timeout: 5s
        type: LOGICAL_DNS
        load_assignment:
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: ui-service
                        port_value: 80
